$fontColor: hsl(226, 12%, 34%);
$borderColor: hsl(240, 6%, 83%);
// $borderColorHover: hsl(240, 2%, 68%);
$primary: hsl(213, 83%, 54%);
// $primaryHover:hsl(213, 100%, 38%);
$secondary: hsl(194, 70%, 56%);
$succ: hsl(155, 72%, 39%);
$warn: hsl(38, 100%, 48%);
$error: hsl(0, 80%, 60%);
$black: hsl(213, 9%, 24%);

$fontSize: 14px;
$borderRadius: 4px;
$checkboxSize: 20px;
$dialogzIndex: 99;

@mixin btn-variant {
	border: 0;
	color: #fff;
}

// input
.input {
	height: 40px;
	line-height: 20px;
	padding: 8px;
	border: 1px solid $borderColor;
	border-radius: $borderRadius;
	background-color: #fff;
	box-sizing: border-box;
	font-size: $fontSize;
	outline: none;
	color: $fontColor;
	-webkit-appearance: none;
	transition: border-color 0.15s, background-color 0.15s;

	&:hover {
		border-color: darken(desaturate($borderColor, 4%), 20%);
	}
	&:focus {
		border-color: $primary;
	}

	&.error,
	&:invalid {
		border-color: $error !important;
	}
	&.disable,
	&:disabled {
		background-color: hsl(200, 23%, 97%);
	}
}
textarea.input {
	height: auto;
	word-break: break-all;
	vertical-align: top;
	resize: none;
	overflow: auto;
}

//button
.btn {
	display: inline-block;
	// line-height: 20px;
	font-size: $fontSize;
	text-align: center;
	color: $fontColor;
	border-radius: $borderRadius;
	border: 1px solid $borderColor;
	padding: 8px 16px;
	min-width: 80px;
	background-color: #fff;
	background-repeat: no-repeat;
	background-position: center;
	text-decoration: none;
	box-sizing: border-box;
	transition: border-color 0.15s, box-shadow 0.15s, opacity 0.15s;
	font-family: inherit;
	cursor: pointer;
	overflow: visible;
	/* Firefox: Get rid of the inner focus border */
	&::-moz-focus-inner {
		padding: 0;
		border: 0;
	}
	&:not(.disabled):not(:disabled):hover {
		border-color: darken(desaturate($borderColor, 4%), 20%);
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05), inset 0 0 0 100px rgba(0, 0, 0, 0.1);
	}
	&:not(.disabled):not(:disabled):active {
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1), inset 0 0 0 100px rgba(0, 0, 0, 0.1);
	}
	&:focus {
		outline: none;
	}
	&.disabled,
	&:disabled {
		opacity: 0.6;
		cursor: not-allowed;
	}
}

.btn-primary {
	@include btn-variant;
	background-color: $primary;
}

.btn-secondary {
	@include btn-variant;
	background-color: $secondary;
}

/* success button */
.btn-success {
	@include btn-variant;
	background-color: $succ;
}

/* warning button */
.btn-warning,
.btn-warn {
	@include btn-variant;
	background-color: $warn;
}
/* danger button */
.btn-danger,
.btn-error {
	@include btn-variant;
	background-color: $error;
}

// checkbox
input[type="checkbox"] {
	position: absolute;
	opacity: 0;
	width: 20px;
	height: 20px;
	cursor: pointer;
	z-index: -1;
}
.checkbox {
	display: inline-block;
	width: $checkboxSize;
	height: $checkboxSize;
	border: 1px solid rgba(0, 0, 0, 0);
	border-radius: $borderRadius;
	box-sizing: border-box;
	box-shadow: inset 0 1px, inset 1px 0, inset -1px 0, inset 0 -1px;
	background-color: #fff;
	background-clip: content-box;
	color: $borderColor;
	transition: color 0.2s, background-color 0.1s;
	user-select: none;
	vertical-align: -5px;
	overflow: hidden;
	cursor: pointer;
	// & + label {
	// 	margin-left: 5px;
	// }
	:not(:disabled) + &:hover,
	:disabled + & {
		color: darken(desaturate($borderColor, 4%), 20%);
	}

	:focus + & {
		color: $primary;
	}
	:focus + &:hover {
		color: darken(saturate($primary, 27%), 16%);
	}

	:checked + & {
		color: $primary;
		background-color: $primary;
	}

	:checked:focus + &,
	:checked + &:hover {
		color: darken(saturate($primary, 27%), 16%);
		background-color: darken(saturate($primary, 27%), 16%);
	}
	&::after {
		content: "";
		display: block;
		width: 100%;
		height: 100%;
		background: url("data:image/svg+xml,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg' width='200' height='200'%3E%3Cpath d='M920.185 224.838c-33.782-33.935-88.619-33.935-122.464 0L409.955 614.564 226.231 429.952c-33.782-33.935-88.68-33.935-122.461 0-33.784 33.997-33.784 89.108 0 123.044l244.925 246.118c33.782 33.998 88.68 33.998 122.463 0l449.028-451.201c33.843-33.967 33.843-89.048-.001-123.075z' fill='%23fff'/%3E%3C/svg%3E")
			no-repeat center;
		background-size: 12px 12px;
		visibility: hidden;
	}
	:checked + &::after {
		visibility: visible;
	}

	:disabled + & {
		opacity: 0.38;
	}
	&.error {
		color: $error;
	}
}

// radio
input[type="radio"] {
	position: absolute;
	opacity: 0;
	width: 20px;
	height: 20px;
	cursor: pointer;
	z-index: -1;
}

.radio {
	display: inline-block;
	width: 20px;
	height: 20px;
	border: 1px solid $borderColor;
	border-radius: 50%;
	background-color: #fff;
	box-sizing: border-box;
	vertical-align: -0.5ex;
	user-select: none;
	transition: border-color 0.2s;
	overflow: hidden;
	cursor: pointer;
	// & + label {
	// 	margin-left: 5px;
	// }
	:not(:disabled) + &:hover {
		border-color: darken(desaturate($borderColor, 4%), 20%);
	}
	:focus + & {
		border-color: $primary;
	}
	&::before {
		content: "";
		display: block;
		width: 10px;
		height: 10px;
		margin: 4px auto 0;
		border-radius: 50%;
		background-color: $primary;
		visibility: hidden;
	}

	:checked + &::before {
		visibility: visible;
	}

	:disabled + & {
		border-color: darken(desaturate($borderColor, 4%), 20%);
		opacity: 0.38;
	}

	&.error {
		border-color: $error;
	}
}

// switch
.switch {
	display: inline-block;
	width: 44px;
	height: 26px;
	border: 2px solid;
	border-radius: 26px;
	background-color: currentColor;
	box-sizing: border-box;
	color: hsl(221, 12%, 75%);
	font-size: 0;
	transition: all 0.2s;
	cursor: pointer;
	/* UE better */
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
	-webkit-tap-highlight-color: transparent;
	&::before {
		content: "";
		display: block;
		width: 22px;
		height: 22px;
		border-radius: 50%;
		background-color: #fff;
		transition: margin-left 0.2s;
	}
	:active + &::before {
		box-shadow: inset 1px 1px 1px hsla(0, 0%, 0%, 0.1);
	}

	:checked + & {
		color: $primary;
	}

	:checked + &::before {
		margin-left: 18px;
	}

	:disabled + & {
		opacity: 0.38;
		cursor: default;
	}

	:focus + &,
	&:hover {
		color: hsl(219, 12%, 67%);
	}

	:checked:focus + &,
	:checked + &:hover {
		color: darken(saturate($primary, 27%), 16%);
	}

	:disabled + &:hover {
		color: hsl(221, 12%, 75%);
	}

	:checked:disabled + &:hover {
		color: $primary;
	}
}

// tips
.tips[data-title] {
	text-indent: 0;
	position: relative;
	overflow: visible;
	&::before,
	&::after {
		position: absolute;
		left: 50%;
		-ms-pointer-events: none;
		pointer-events: none;
		-ms-transform: translateX(-50%);
		transform: translateX(-50%);
		visibility: hidden;
	}

	&::before {
		content: attr(data-title);
		bottom: calc(100% + 12px);
		max-width: 250px;
		padding: 6px 10px;
		line-height: 18px;
		border-radius: 3px;
		background-color: $black;
		text-align: left;
		color: #fff;
		font-size: 12px;
		font-style: normal;
		white-space: nowrap;
	}

	&::after {
		content: "";
		border: 6px solid transparent;
		border-top-color: $black;
		bottom: 100%;
	}

	&:hover::before,
	&:hover::after,
	&:focus::before,
	&:focus::after {
		transition: visibility 0.1s 0.1s;
		visibility: visible;
	}

	&:hover {
		outline: none;
	}

	// 朝下的情况
	&.bottom::before {
		bottom: auto;
		top: calc(100% + 12px);
	}

	&.bottom::after {
		border-color: transparent transparent $black;
		bottom: auto;
		top: 100%;
	}

	// 朝右的情况
	&.right::before {
		top: auto;
		bottom: auto;
		left: calc(100% + 12px);
		transform: translate(0);
	}
	&.right::after {
		top: calc(50% - 3px);
		bottom: auto;
		left: calc(100%);
		transform: translate(0);
		border-color: transparent $black transparent transparent;
	}
}

//dialog
.back-drop {
	position: fixed;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	padding: 0;
	border: 0;
	background-color: hsla(0, 0, 0%, 0.5);
	text-align: center;
	color: $fontColor;
	font-size: $fontSize;
	white-space: nowrap;
	overflow: auto;
	visibility: hidden;
	z-index: dialogzIndex;
	opacity: 0;
	transition: all 0.3s ease-in-out;
	&.show {
		visibility: visible;
		opacity: 1;
	}
}

.dialog {
	position: relative;
	display: inline-block;
	margin: 120px 0 30px;
	text-align: left;
	min-width: 400px;
	border-radius: $borderRadius;
	background-color: #fff;
	vertical-align: middle;
	white-space: normal;
	outline: none;
	visibility: hidden;
	opacity: 0;
	transform-origin: 50%;
	transform-style: preserve-3d;
	transform: scale(0);
	transition: all 0.3s ease-in-out;
	.show & {
		visibility: visible;
		opacity: 1;
		transform: scale(1);
	}
}
.dialog-header {
	padding: 16px;
	background-color: $primary;
	font-size: 16px;
	text-align: center;
	color: #fff;
}
.dialog-body {
	min-height: 40px;
	padding: 20px;
	text-align: center;
}
.dialog-footer {
	text-align: right;
	padding: 20px;
	button + button {
		margin-left: 10px;
	}
}

// loading
.loading {
	text-align: center;
	cursor: default;
	/* icon offset need */
	box-sizing: border-box;
	&::before {
		content: "";
		display: inline-block;
		width: 20px;
		height: 20px;
		margin: 0 0.5em;
		background: url("data:image/svg+xml,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg' width='200' height='200'%3E%3Cpath d='M512 1024q-104 0-199-40-92-39-163-110T40 711Q0 616 0 512q0-15 10.5-25.5T36 476t25.5 10.5T72 512q0 90 35 171 33 79 94 140t140 95q81 34 171 34t171-35q79-33 140-94t95-140q34-81 34-171t-35-171q-33-79-94-140t-140-95q-81-34-171-34-15 0-25.5-10.5T476 36t10.5-25.5T512 0q104 0 199 40 92 39 163 110t110 163q40 95 40 199t-40 199q-39 92-110 163T711 984q-95 40-199 40z' fill='%232a80eb'/%3E%3C/svg%3E")
			no-repeat center;
		background-size: 100%;
		animation: spin 1s linear infinite;
		vertical-align: -4px;
	}

	&::after {
		content: "";
		display: inline-block;
		height: 100%;
		vertical-align: middle;
	}
	&[spin]::before {
		display: none;
	}

	&[size="1"]::before {
		width: 10px;
		height: 10px;
		vertical-align: 0;
	}
	&[size="3"]::before {
		width: 30px;
		height: 30px;
		vertical-align: -8px;
	}
	&[size="4"]::before {
		width: 40px;
		height: 40px;
		vertical-align: -12px;
	}
}

@keyframes spin {
	from {
		transform: rotate(0);
	}
	to {
		transform: rotate(360deg);
	}
}

/* 文本点点点 */
.dot {
	display: inline-block;
	height: 1em;
	line-height: 1;
	text-align: left;
	vertical-align: -0.25em;
	overflow: hidden;
	&::before {
		display: block;
		content: "...\A..\A.";
		white-space: pre-wrap;
		animation: dot 3s infinite step-start both;
	}
}
@keyframes dot {
	33% {
		transform: translateY(-2em);
	}
	66% {
		transform: translateY(-1em);
	}
}
